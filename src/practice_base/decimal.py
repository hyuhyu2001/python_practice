#!/user/bin/env python
#encoding:utf-8

'''
Python的长整数类型能表达的数值仅仅与你的机器支持的(虚拟)内存大小有关，而其他语言的长整数典型的取值范围是32位或64位
用大写字母 “L”表示长整数，目前整型和长整型正在逐渐缓慢的统一，您只有在对长整数调用repr()函数时才有机会看到“L”，如果对长整数对象调用 str()函数就看不到 L

浮点数值通常都有一个小数点和一个可选的后缀e(大写或小写，表示科学计数法)。在e和指数之间可以用正（+）或负（-）表示指数的正负（正数的话可以省略符号）
E标记表示10的幂。在这里，52.3E-4表示52.3 * 10-4

复数：一个实数和一个虚数的组合构成一个复数。一个复数是一对有序浮点数(x, y)。表示为x + yj，其中x是实数部分，y是虚数部分；虚数不能单独存在，它们总是和一个值为 0.0 的实数部分一起来构成一个复数
共轭复数，简单来说就是两个实部相等，虚部互为相反数的复数互为共轭复数(conjugate complex number)

算数运算符:Python 支持单目运算符正号（+）和负号（－）， 双目运算符， +，－，*，/，%，还有 ** ，分别表示加法，减法，乘法，除法，取余，和幂运算。
从 Python2.2 起，还增加了一种新的整除运算符//(地板除)

位运算符（只适用于整数）：支持标准位运算符：取反(~)，按位 与(&), 或(|) 及 异或(^) 及左移(<<)和右移(>>)。
取反(~)运算的优先级与数字单目运算符相同，是所有位操作符中优先级最高的一个。左移和右移运算的优先级次之，但低于加减法运算。与，或，异或运算优先级最低


#2.2版本后，标准整形超出取值范围后，不会溢出
print 9999**8

删除对象
a =1 
del a
'''
anint = 1
along = -555555555555L
afloat = 9.384e-23
acomplex = 1.334+4.5433j

#混合运算符
#python支持不同的数字类型相加, 类型转换的原则：整数转换为浮点数，非复数转换为复数
print anint+along+afloat+acomplex

print 8/3  #传统除法，如果是整数除法，则舍去小数部分，返回一个整数（地板除）
print 8/3.0 #传统除法，如果有一个是浮点数，则执行真正的除法
print 1//2 #地板除，返回整数
print 1.0//2.0 #地板除，返回浮点数
print -1.0//2.0 #地板除，返回比-0.5小的整数，也就是-1
print -1.0/2.0 #正常除法
print -3 ** 2 # ** 优先级高于左侧的 -
print (-3)** 2 #加括号提高-的优先级
print 4 ** -1 #** 优先级低于左侧的 -

#复数函数
print acomplex.real #取复数的实数
print acomplex.imag #取复数的虚数
print acomplex.conjugate() #取复数的共轭复数

#数字函数总结
#1、标准类型函数（也是工厂函数）
print cmp(anint,along) #比较两个数字的大小,cmp(x, y),如果x < y ,返回负数；x == y, 返回0；x > y,返回正数
print str(afloat) #将数字转换为字符串
print type(afloat) #返回数字对象的类型

#2、转换工厂函数
print int(2.33) #将一个数转换为整数，转换为整数的时候，默认向下取整
print int('12',8)#如果是带参数base的话，12要以字符串的形式进行输入，可接受进制参数,默认10进制.用法： int(obj,base=10)
print long(9999**8) #将一个数转换为长整数
print long('9999',16)  #long(obj,base=10) 
print float(4) #返回一个字符串或数据对象的浮点数表示；float(obj)
print complex(4) #返回一个字符串或数据对象的复数表示，或者根据给定实数生产复数对象 
print complex(2.3e-10, 45.3e4)  #complex([real[, imag]])，创建一个值为real + imag * j的复数或者转化一个字符串或数为复数
print bool(1) #将整数型1和0转换为标注布尔值True和False

#3、功能函数
print abs(-3.32)#返回给定参数的(num)绝对值
print abs(1.334-4.5433j) #如果参数是一个复数，那么就返回 math.sqrt(num.real2 + num.imag2
print coerce(anint,acomplex) #数字类型之间的转换函数，仅返回一个包含类型转换完毕的两个数值元素的元组。将anint类型转换为等同于acomplex的类型
print divmod(10, 3)#divmod()内建函数把除法和取余运算结合起来, 返回一个包含商和余数的元组,对整数来说，它的返回值就是地板除和取余操作的结果
print divmod(10, 2.5)#对浮点数来说，返回的商部分是math.floor(num1/num2)
print divmod(2+1j, 2.3+4.3j) #对复数来说，商部分是math.floor((num1/num2).real)
print pow(3, 4) #指数运算 = 3**4
print pow(3,4,2) #使用第三个参数，即将运算结果和第三个参数取余运算,pow(x,y,z)比pow(x,y)%z性能好
print round(3.34345,2) #常用于浮点数，进行四舍五入运算，返回和第一参数最接近的整数，第2个参数告诉round函数精确到小数点后几位

#4、仅用于整数的函数
print hex(12)#将数字换行为16进制并以字符串形式返回
print oct(12) #将数字换行为8进制并以字符串形式返回
print chr(12) #将ASCII的数字换行为ASCII的字符，范围只能是0<=num<=255
print ord('') #接受一个ASCII或Unicode字符（长度为1的字符串），返回相应的ASCII值或Unicode值
print ord ('$')
print unichr(122)#将数字换行为8进制并以字符串形式返回,所接受的码值范围依赖于你的Python是构建于UCS‐2还是UCS‐4